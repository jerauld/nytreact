{"version":3,"sources":["components/Saved.js","components/SavedArticles.js","components/SearchForm.js","components/Results.js","utils/API.js","components/Jumbotron.js","components/SearchResults.js","components/Home.js","App.js","registerServiceWorker.js","index.js"],"names":["Saved","props","className","title","date","substring","href","url","target","rel","onClick","handleDeleteButton","_id","SavedArticles","renderSaved","SearchForm","htmlFor","type","id","onChange","topicInput","startYearInput","endYearInput","formSubmit","Results","handleSaveButton","API","searchNYT","topic","startYear","endYear","queryURL","axios","get","getArticle","saveArticle","dbArticle","post","deleteArticle","delete","Jumbotron","appName","subtitle","SearchResults","renderArticles","Home","state","articles","saved","map","article","key","headline","main","pub_date","web_url","getSavedArticles","save","handleTopicInput","event","setState","value","handleStartYearInput","handleEndYearInput","handleFormSubmit","preventDefault","then","res","data","response","docs","findArticleByID","find","el","newSave","this","Component","App","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a2b350aa.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Saved = (props) => {\n  return(\n\n  <div className=\"card\">\n    <div className=\"card-body\">\n    <div className=\"row\">\n          <div className=\"col-md-6\">\n          <h5 className=\"card-title\">{props.title}</h5>\n      <p className=\"card-text\">{props.date.substring(0, 10)}</p>\n          </div>\n          <div className=\"col-md-6 text-right\">\n          <a href={props.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-outline-success btn-sm mr-1\">View Article</a>\n      <button className=\"btn btn-outline-danger btn-sm\" onClick={() => props.handleDeleteButton(props._id)}>Remove from Saved</button>\n          </div>\n        </div>\n \n    \n    </div>\n  </div>\n\n  );\n}\n\n\nexport default Saved;","\n\n\n\nimport React from \"react\";\n\nconst SavedArticles = (props) =>\n<div>\n<div className=\"card mb-5\">\n<div className=\"card-header text-center\">\n  <h2>Saved Articles</h2>\n</div>\n<div className=\"card-body\">\n  {props.renderSaved()}\n</div>\n</div>\n</div>\n\nexport default SavedArticles;","import React from \"react\";\n\nconst SearchForm = (props) => {\n  return (\n    <div>\n      <div className=\"card mb-5\">\n      <div className=\"card-header text-center\">\n        <h2>Search</h2>\n      </div>\n      <div className=\"card-body text-center\">\n        <form>\n          <div className=\"form-group\">\n            <label htmlFor=\"topicInput\">Topic</label>\n            <input type=\"text\" className=\"form-control\" id=\"topicInput\" onChange={props.topicInput} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"startYearInput\">Start Year</label>\n            <input type=\"text\" className=\"form-control\" id=\"startYearInput\" onChange={props.startYearInput} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"endYearInput\">End Year</label>\n            <input type=\"text\" className=\"form-control\" id=\"endYearInput\" onChange={props.endYearInput} />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\" onClick={props.formSubmit}>Search</button>\n        </form>\n      </div>\n      </div>\n    </div>\n  )\n}\n \n\n\nexport default SearchForm;","import React from \"react\";\n\nconst Results = (props) => {\n  return (\n\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <h5 className=\"card-title\">{props.title}</h5>\n            <p className=\"card-text\">{props.date.substring(0, 10)}</p>\n          </div>\n          <div className=\"col-md-6 text-right\">\n            <a href={props.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-outline-success btn-sm mr-1\">View Article</a>\n            <button className=\"btn btn-outline-info btn-sm\" onClick={() => props.handleSaveButton(props._id)}>Save Article</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  )\n}\n\nexport default Results;","import axios from \"axios\";\n\n\nvar APIKEY = \"769ae556259949f9bb72bf4556f8d25c\";          \n\nvar API = {\n  // Query NYT API\n  searchNYT: function(topic, startYear, endYear) {\n    const queryURL = `https://api.nytimes.com/svc/search/v2/articlesearch.json?api-key=${APIKEY}&q=${topic}&begin_date=${startYear}0101&end_date=${endYear}0101`;\n    return axios.get(queryURL);\n  },\n  // Retrieves saved articles from the db\n  getArticle: function() {\n    return axios.get(\"/api/articles\");\n  },\n  // Saves a new article to the db\n  saveArticle: function(dbArticle) {\n    return axios.post(\"/api/articles\", dbArticle);\n  },\n  // Deletes an article from the db\n  deleteArticle: function(id) {\n    return axios.delete(`/api/articles/${id}`);\n  }\n};\n\nexport default API;\n","import React from \"react\";\n\nconst Jumbotron = (props) =>\n    <div className=\"jumbotron jumbotron-fluid\">\n        <h1 className=\"display-4 text-center\">{props.appName}</h1>\n        <p className=\"lead text-center\">{props.subtitle}</p>\n    </div>\n\nexport default Jumbotron;","import React from \"react\";\n\nconst SearchResults = (props) => {\n  return (\n    <div>\n      <div className=\"card  mb-5\">\n      <div className=\"card-header text-center\">\n        <h2>Search Results</h2>\n      </div>\n      <div className=\"card-body\">\n        {props.renderArticles()}\n      </div>\n      </div>\n        \n        \n    </div>\n  )\n}\n \n\n\nexport default SearchResults;","import React, { Component } from \"react\";\nimport Saved from \"./Saved\";\nimport SavedArticles from \"./SavedArticles\";\nimport SearchForm from \"./SearchForm\";\nimport Results from \"./Results\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"./Jumbotron\";\nimport SearchResults from \"./SearchResults\";\n\nclass Home extends Component {\n\n  state = {\n    topic: \"\",\n    startYear: \"\",\n    endYear: \"\",\n    articles: [],\n    saved: []\n  };\n\n  componentDidMount() {\n    this.getSavedArticles()\n  }\n\n  renderArticles = () => {\n    return this.state.articles.map(article => (\n      <Results\n        _id={article._id}\n        key={article._id}\n        title={article.headline.main}\n        date={article.pub_date}\n        url={article.web_url}\n        handleSaveButton={this.handleSaveButton}\n        getSavedArticles={this.getSavedArticles}\n      />\n    ));\n  }\n\n  renderSaved = () => {\n    return this.state.saved.map(save => (\n      <Saved\n        _id={save._id}\n        key={save._id}\n        title={save.title}\n        date={save.date}\n        url={save.url}\n        handleDeleteButton={this.handleDeleteButton}\n        getSavedArticles={this.getSavedArticles}\n      />\n    ));\n  }\n\n  handleTopicInput = (event) => {\n    this.setState({ topic: event.target.value });\n  }\n\n  handleStartYearInput = (event) => {\n    this.setState({ startYear: event.target.value });\n  }\n\n  handleEndYearInput = (event) => {\n    this.setState({ endYear: event.target.value });\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    API.searchNYT(this.state.topic, this.state.startYear, this.state.endYear)\n      .then((res) => {\n        this.setState({ articles: res.data.response.docs });\n      });\n  }\n\n  getSavedArticles = () => {\n    API.getArticle()\n      .then((res) => {\n        this.setState({ saved: res.data });\n      });\n  }\n\n  handleSaveButton = (id) => {\n    const findArticleByID = this.state.articles.find((el) => el._id === id);\n    const newSave = {title: findArticleByID.headline.main, date: findArticleByID.pub_date, url: findArticleByID.web_url};\n    API.saveArticle(newSave)\n    .then(this.getSavedArticles());\n  }\n\n  handleDeleteButton = (id) => {\n    API.deleteArticle(id)\n      .then(this.getSavedArticles());\n  }\n\n  render() {\n    return (\n\n      <div>\n\n        <Jumbotron appName={\"New York Times React Search\"} subtitle={\"Search for and save articles of interest.\"}/>\n\n        <div className=\"container\">\n\n          <SearchForm\n            topicInput={this.handleTopicInput}\n            startYearInput={this.handleStartYearInput}\n            endYearInput={this.handleEndYearInput}\n            formSubmit={this.handleFormSubmit}\n          />\n\n          <SearchResults\n            renderArticles={this.renderArticles}\n          />\n\n          <SavedArticles\n            renderSaved={this.renderSaved}\n          />\n\n        </div>\n\n      </div>\n\n    );\n  }\n\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\n\n//Week 11, Lesson 4\nconst App = () =>\n  <Router>\n    <div>\n      {/* This is a single page application */}\n      <Route path=\"/\" component={Home} />\n    </div>\n  </Router>;\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}